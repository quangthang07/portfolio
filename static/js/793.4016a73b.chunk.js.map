{"version":3,"file":"static/js/793.4016a73b.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}